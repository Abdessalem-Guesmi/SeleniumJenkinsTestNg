<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" ignored="0" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="133697" started-at="2021-02-05T14:08:44Z" finished-at="2021-02-05T14:10:58Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="133697" started-at="2021-02-05T14:08:44Z" finished-at="2021-02-05T14:10:58Z">
      <class name="test.Test1">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.Test1@15ff3e9e]" name="setUp" is-config="true" duration-ms="62255" started-at="2021-02-05T14:08:44Z" finished-at="2021-02-05T14:09:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="test1()[pri:1, instance:test.Test1@15ff3e9e]" name="test1" duration-ms="5266" started-at="2021-02-05T14:09:47Z" finished-at="2021-02-05T14:09:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[the title contains not Test0 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: the title contains not Test0 expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at test.Test1.test1(Test1.java:18)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:test.Test1@15ff3e9e]" name="recordFailure" is-config="true" duration-ms="1082" started-at="2021-02-05T14:09:52Z" finished-at="2021-02-05T14:09:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=FAILURE method=Test1.test1()[pri:1, instance:test.Test1@15ff3e9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.Test1@15ff3e9e]" name="setUp" is-config="true" duration-ms="16999" started-at="2021-02-05T14:09:53Z" finished-at="2021-02-05T14:10:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test2()[pri:2, instance:test.Test1@15ff3e9e]" name="test2" duration-ms="2545" started-at="2021-02-05T14:10:10Z" finished-at="2021-02-05T14:10:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:test.Test1@15ff3e9e]" name="recordFailure" is-config="true" duration-ms="1173" started-at="2021-02-05T14:10:13Z" finished-at="2021-02-05T14:10:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=SUCCESS method=Test1.test2()[pri:2, instance:test.Test1@15ff3e9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.Test1@15ff3e9e]" name="setUp" is-config="true" duration-ms="14447" started-at="2021-02-05T14:10:14Z" finished-at="2021-02-05T14:10:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="test3()[pri:3, instance:test.Test1@15ff3e9e]" name="test3" duration-ms="3271" started-at="2021-02-05T14:10:29Z" finished-at="2021-02-05T14:10:32Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[test-case skipped]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: test-case skipped
at test.Test1.test3(Test1.java:34)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:test.Test1@15ff3e9e]" name="recordFailure" is-config="true" duration-ms="1957" started-at="2021-02-05T14:10:32Z" finished-at="2021-02-05T14:10:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test3 status=SKIP method=Test1.test3()[pri:3, instance:test.Test1@15ff3e9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.Test1@15ff3e9e]" name="setUp" is-config="true" duration-ms="14382" started-at="2021-02-05T14:10:34Z" finished-at="2021-02-05T14:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test4()[pri:4, instance:test.Test1@15ff3e9e]" name="test4" duration-ms="8349" started-at="2021-02-05T14:10:48Z" finished-at="2021-02-05T14:10:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method status="PASS" signature="recordFailure(org.testng.ITestResult)[pri:0, instance:test.Test1@15ff3e9e]" name="recordFailure" is-config="true" duration-ms="583" started-at="2021-02-05T14:10:56Z" finished-at="2021-02-05T14:10:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test4 status=SUCCESS method=Test1.test4()[pri:4, instance:test.Test1@15ff3e9e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recordFailure -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.Test1@15ff3e9e]" name="tearDown" is-config="true" duration-ms="945" started-at="2021-02-05T14:10:57Z" finished-at="2021-02-05T14:10:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.Test1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
